"""
The following is data is based on historical data generated by Lite San Leandro for Percentage CPU snesor
"""
import datetime
import random 
import string
import uuid

PERCENTAGECPU_DATA = {
        'ADVA FSP3000R7': {
            'parentelement': '62e71893-92e0-11e9-b465-d4856454f4ba',
            'webid': 'F1AbEfLbwwL8F6EiShvDV-QH70AkxjnYuCS6RG0ZdSFZFT0ugnMRtEzvxdFojNpadLPwI4gWE9NUEFTUy1MSVRTTFxMSVRTQU5MRUFORFJPXDc3NyBEQVZJU1xQT1AgUk9PTVxBRFZBIEZTUDMwMDBSN3xQSU5H',
            'min_value': 0,
            'max_value': 50
        },
        'Catalyst 3500XL': {
            'parentelement': '68ae8bef-92e1-11e9-b465-d4856454f4ba',
            'webid': 'F1AbEfLbwwL8F6EiShvDV-QH70A74uuaOGS6RG0ZdSFZFT0ug4FckGTrxdFojNpadLPwI4gWE9NUEFTUy1MSVRTTFxMSVRTQU5MRUFORFJPXDc3NyBEQVZJU1xQT1AgUk9PTVxDQVRBTFlTVCAzNTAwWEx8UElORw',
            'min_value': 0,
            'max_value': 50
        },
}

def get_percentagecpu_data(frequency:float)->dict: 
   """
   Generate dict forr ping_data  
   :args: 
      frequency:float - multiplication of generated value  
   :param: 
      timestamp:str
      device_name:str
      parentelement:str 
      webiid:str - str 
      min/max value:int - value range to get value from 
   :return: 
      data dict based on information generated by PERCENTAGECPU_DATA 
   """
   timestamp = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f') 
   device_name = random.choice(list(PERCENTAGECPU_DATA.keys()))
   parentelement = PERCENTAGECPU_DATA[device_name]['parentelement'] 
   webid = PERCENTAGECPU_DATA[device_name]['webid'] 
   value = random.choice(range(PERCENTAGECPU_DATA[device_name]['min_value'], PERCENTAGECPU_DATA[device_name]['max_value'])) * frequency 

   data = {'timestamp': timestamp, 'device_name': device_name, 'parentelement': parentelement, 'webid': webid, 'value': value} 
   return data

